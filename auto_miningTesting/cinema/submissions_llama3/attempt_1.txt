Here is a Python program that solves the problem:

```Python
def count_unaccepted_groups():
    N, M = map(int, input().split())
    group_sizes = list(map(int, input().split()))
    
    unaccepted_groups = 0
    total_visitors = 0
    
    for size in group_sizes:
        total_visitors += size
        if total_visitors > N:
            unaccepted_groups += 1
            total_visitors -= size

    return unaccepted_groups

print(count_unaccepted_groups())
```

In this program, we first read the number of seats (`N`) and the number of groups (`M`) from the input. Then, we read the sizes of all visiting groups.

We initialize a variable `unaccepted_groups` to count the number of groups that will not be accepted, and a variable `total_visitors` to keep track of the total number of visitors in the theater so far.

We then iterate over each group size. For each group, we add its size to `total_visitors`. If `total_visitors` exceeds `N`, it means there are too many visitors already and the current group will not be accepted, so we increment `unaccepted_groups` and subtract the group's size from `total_visitors` (to simulate the group leaving).