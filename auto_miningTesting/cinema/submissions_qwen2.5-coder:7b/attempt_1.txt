Here's a Python program that reads input from standard input and writes output to the standard output. The program determines how many groups will not be accepted into the theater based on the given constraints:

```python
# Read input from standard input
N, M = map(int, input().split())
groups = list(map(int, input().split()))

# Initialize variables
total_groups_not_accepted = 0
current_seats_available = N

# Iterate through each group and check if they can enter the theater
for group_size in groups:
    if group_size <= current_seats_available:
        current_seats_available -= group_size
    else:
        total_groups_not_accepted += 1

# Output the number of groups that will not be accepted
print(total_groups_not_accepted)
```

### Explanation:

1. **Reading Input:**
   - The first line of input contains two integers, `N` and `M`, representing the number of seats in the theater and the number of visiting groups, respectively.
   - The second line contains `M` integers, each representing the size of a group.

2. **Initialization:**
   - `total_groups_not_accepted` is initialized to 0 to keep track of how many groups are not accepted.
   - `current_seats_available` is initialized to `N` to represent the available seats in the theater.

3. **Processing Groups:**
   - The program iterates through each group's size.
   - If the current group's size is less than or equal to the number of available seats (`current_seats_available`), the group enters, and the available seats are reduced by the group's size.
   - If the current group's size is greater than the number of available seats, the group does not enter, and `total_groups_not_accepted` is incremented.

4. **Output:**
   - The program prints the total number of groups that will not be accepted to the theater.

This solution ensures that the program reads input from standard input and writes output to the standard output, adheres to the constraints provided, and correctly determines how many groups will not be accepted based on the available seats.