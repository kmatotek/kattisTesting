Here is a Python program that uses basic geometry to calculate the distance between two points on a grid:

```python
def calc_distance(x1, y1, x2, y2):
    return ((x1-x2)**2 + (y1-y2)**2) ** 0.5

def calc_total_length(pivots):
    total_length = 0
    for i in range(len(pivots)):
        for j in range(i+1, len(pivots)):
            x1 = (pivots[i] - 1) % 3
            y1 = (pivots[i] - 1) // 3
            x2 = (pivots[j] - 1) % 3
            y2 = (pivots[j] - 1) // 3
            total_length += calc_distance(x1, y1, x2, y2)
    return total_length

if __name__ == "__main__":
    pivots = []
    for _ in range(3):
        line = list(map(int, input().split()))
        pivots.extend(line)

    print(calc_total_length(pivots))
```

This program first calculates the x and y coordinates of each pivot on a 3x3 grid. Then it calculates the Euclidean distance between every pair of pivots and sums these distances to get the total length of the pattern.

The function `calc_distance` calculates the square root of the sum of squared differences in x and y coordinates, which is the Euclidean distance formula.

The function `calc_total_length` takes a list of pivot numbers as input. It iterates over all pairs of pivots and for each pair, it converts the pivot number to grid coordinates, calculates the distance using the `calc_distance` function, and adds this distance to the total length.

Finally, in the main part of the program, it reads three lines of input, extracts the pivot numbers, and calls `calc_total_length` to calculate and print the total length of the pattern.